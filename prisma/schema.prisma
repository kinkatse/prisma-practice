// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String @id @default(uuid())
  name     String
  username String
  age      Int?
  phone    Int?
  email    String @unique
  role     Role   @default(BASIC)
  // preferences Json?

  userPreference UserPreference?
  posts          Post[]          @relation("writtenPosts")
  likedPosts     Post[]

  // posts       Post[]  @relation("writtenPosts")
  // likedPosts  Post?   @relation(fields: [likedPostId], references: [id])
  // likedPostId String?

  // writtenPosts Post[]  @relation("writtenPosts")
  // likedPost   Post[] @relation("likedPosts")

  @@unique([username, email])
  @@index([phone])
}

model Post {
  id        String   @id @default(uuid())
  title     String
  body      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  author   User?   @relation("writtenPosts", fields: [authorId], references: [id])
  authorId String?
  likers   User[]

  // author   User   @relation("writtenPosts", fields: [authorId], references: [id])
  // authorId String

  // likers User[]

  // author   User   @relation("writtenPosts", fields: [authorId], references: [id])
  // authorId String
  // liker   User?   @relation("likedPosts", fields: [likerId], references: [id])
  // likerId String?

  // @@id([title, authorId])
}

model UserPreference {
  id           String  @id @default(uuid())
  emailUpdates Boolean
  user         User    @relation(fields: [userId], references: [id])
  userId       String  @unique
}

enum Role {
  BASIC
  ADMIN
}
